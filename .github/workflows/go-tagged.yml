name: Go

on:
  push:
    tags:
      - "v*"

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: MakeInstall
        run: sudo apt install -y build-essential

      - name: Test
        run: go test -v .

      - name: Coverage
        run: go test -v -coverprofile=profile.cov ./...

      - name: SendCoverage
        uses: shogo82148/actions-goveralls@v1
        with:
          flag-name: ${{ github.ref }}
          path-to-profile: profile.cov

      - name: Build
        run: make build_all

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions
        with:
          tag_name: main-${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true
      - name: Update Artifacts
        id: upload-release-asset-darwin
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: ./build/k8sconfigmap-azappservice-darwin-amd64
          asset_name: k8sconfigmap-azappservice-darwin-amd64
          asset_content_type: application/octet-stream
      - name: Update Artifacts
        id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: ./build/k8sconfigmap-azappservice-linux-amd64
          asset_name: k8sconfigmap-azappservice-linux-amd64
          asset_content_type: application/octet-stream
      - name: Update Artifacts
        id: upload-release-asset-windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above
          asset_path: ./build/k8sconfigmap-azappservice-windows-amd64
          asset_name: k8sconfigmap-azappservice-windows-amd64
          asset_content_type: application/octet-stream